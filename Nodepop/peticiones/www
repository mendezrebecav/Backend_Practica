
var http = require("http");
var cofig = require("config");
var app = require("../app");
var debug = require("debug")("nodepop:server");

// var port = normalizePort(process.env.PORT || "3000");
var port = normalizePort(process.env.PORT || config.get('App.webServer.port'));
var mode = process.env.NODE_ENV || "development";
// var port = normalizePort(config.PORT);
app.set("port", port);


var server = http.createServer(app);

server.listen(port, function () {
  console.log('Mode: ' +mode+ ' listening on port ' + port);
});
server.on("error", onError);
server.on("listening", onListening);

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string"
    ? "Pipe " + port
    : "Port " + port;

  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {

    return port;
  }

  return false;
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string"
    ? "pipe " + addr
    : "port " + addr.port;
  debug("Listening on " + bind);
}
